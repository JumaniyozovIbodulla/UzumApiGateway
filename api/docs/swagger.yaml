definitions:
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  order_notes.CreateOrderNotes:
    properties:
      order_id:
        type: string
      reason:
        type: string
      status:
        $ref: '#/definitions/order_notes.PaymentEnum'
      user_id:
        type: string
    type: object
  order_notes.PaymentEnum:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - PaymentEnum_waiting_for_payment
    - PaymentEnum_collecting
    - PaymentEnum_shipping
    - PaymentEnum_waiting_on_branch
    - PaymentEnum_finished
    - PaymentEnum_cancelled
  order_notes.UpdateOrderNotes:
    properties:
      id:
        type: string
      order_id:
        type: string
      reason:
        type: string
      status:
        $ref: '#/definitions/order_notes.PaymentEnum'
      user_id:
        type: string
    type: object
  order_product_service.CreateOrderProduct:
    properties:
      count:
        type: integer
      discount_price:
        type: number
      order_id:
        type: string
      price:
        type: number
      product_id:
        type: string
    type: object
  order_product_service.UpdateOrderProduct:
    properties:
      count:
        type: integer
      deleted_at:
        type: integer
      discount_price:
        type: number
      id:
        type: string
      order_id:
        type: string
      price:
        type: number
      product_id:
        type: string
    type: object
  order_service.CreateOrder:
    properties:
      amount:
        type: number
      courier_id:
        type: string
      courier_name:
        type: string
      courier_phone:
        type: string
      customer_id:
        type: string
      customer_name:
        type: string
      customer_phone:
        type: string
      delivery_price:
        type: number
      discount_amount:
        type: number
      external_id:
        type: string
      paid:
        type: boolean
      payment_type:
        $ref: '#/definitions/order_service.PaymentType'
      status:
        $ref: '#/definitions/order_service.PaymentEnum'
      to_address:
        type: string
      to_location:
        $ref: '#/definitions/order_service.Location'
      type:
        $ref: '#/definitions/order_service.TypeEnum'
    type: object
  order_service.Location:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  order_service.PaymentEnum:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - PaymentEnum_waiting_for_payment
    - PaymentEnum_collecting
    - PaymentEnum_shipping
    - PaymentEnum_waiting_on_branch
    - PaymentEnum_finished
    - PaymentEnum_cancelled
  order_service.PaymentType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - PaymentType_uzum
    - PaymentType_cash
    - PaymentType_terminal
  order_service.TypeEnum:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - TypeEnum_self_pickup
    - TypeEnum_delivery
  order_service.UpdateOrder:
    properties:
      amount:
        type: number
      courier_id:
        type: string
      courier_name:
        type: string
      courier_phone:
        type: string
      customer_id:
        type: string
      customer_name:
        type: string
      customer_phone:
        type: string
      deleted_at:
        type: integer
      delivery_price:
        type: number
      discount_amount:
        type: number
      external_id:
        type: string
      id:
        type: string
      paid:
        type: boolean
      payment_type:
        $ref: '#/definitions/order_service.PaymentType'
      status:
        $ref: '#/definitions/order_service.PaymentEnum'
      to_address:
        type: string
      to_location:
        $ref: '#/definitions/order_service.Location'
      type:
        $ref: '#/definitions/order_service.TypeEnum'
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/order:
    post:
      consumes:
      - application/json
      description: API for creating an order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order_service.CreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Create an order
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: API for update an order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order_service.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update an order
      tags:
      - orders
  /api/v1/order/{id}:
    delete:
      consumes:
      - application/json
      description: API for delete an order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete an order
      tags:
      - orders
    get:
      consumes:
      - application/json
      description: API for getting an order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get an order
      tags:
      - orders
  /api/v1/orderNote:
    post:
      consumes:
      - application/json
      description: API for creating an order notes
      parameters:
      - description: order-notes
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order_notes.CreateOrderNotes'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Create an order notes
      tags:
      - order-notes
    put:
      consumes:
      - application/json
      description: API for update an order notes
      parameters:
      - description: order-notes
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order_notes.UpdateOrderNotes'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update an order notes
      tags:
      - order-notes
  /api/v1/orderNote/{id}:
    delete:
      consumes:
      - application/json
      description: API for delete an order notes
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete an order notes
      tags:
      - order-notes
    get:
      consumes:
      - application/json
      description: API for getting an order notes
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get an order notes
      tags:
      - order-notes
  /api/v1/orderNotes:
    get:
      consumes:
      - application/json
      description: API for Get all order notes
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all order notes
      tags:
      - order-notes
  /api/v1/orderProduct:
    post:
      consumes:
      - application/json
      description: API for creating an order products
      parameters:
      - description: order-products
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order_product_service.CreateOrderProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Create an orderProduct
      tags:
      - order-products
    put:
      consumes:
      - application/json
      description: API for update an order product
      parameters:
      - description: order-products
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order_product_service.UpdateOrderProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update an order product
      tags:
      - order-products
  /api/v1/orderProduct/{id}:
    delete:
      consumes:
      - application/json
      description: API for delete an order product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete an order product
      tags:
      - order-products
    get:
      consumes:
      - application/json
      description: API for getting an order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get an order-product
      tags:
      - order-products
  /api/v1/orderProducts:
    get:
      consumes:
      - application/json
      description: API for Get all order products
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all orders
      tags:
      - order-products
  /api/v1/orders:
    get:
      consumes:
      - application/json
      description: API for Get all orders
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all orders
      tags:
      - orders
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
